cmake_minimum_required (VERSION 2.6)
project(TGAlib)

set(TGA_TEST TRUE)

if(TGA_TEST)
set(CMAKE_C_COMPILER /usr/bin/clang)
    set(CMAKE_CXX_COMPILER /usr/bin/clang++)
    set(CMAKE_CXX_FLAGS "-g -std=c++11 -fcolor-diagnostics")
    set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
  endif()
#unity build helper taken from https://cheind.wordpress.com/2009/12/10/reducing-compilation-time-unity-builds/
function(enable_unity_build UB_SUFFIX SOURCE_VARIABLE_NAME)
  set(files ${${SOURCE_VARIABLE_NAME}})
  # Generate a unique filename for the unity build translation unit
  set(unit_build_file ${CMAKE_CURRENT_BINARY_DIR}/ub_${UB_SUFFIX}.cpp)
  # Exclude all translation units from compilation
  set_source_files_properties(${files} PROPERTIES HEADER_FILE_ONLY true)
  # Open the ub file
  FILE(WRITE ${unit_build_file} "// Unity Build generated by CMake\n")
  # Add include statement for each translation unit
  foreach(source_file ${files} )
    FILE( APPEND ${unit_build_file} "#include <${CMAKE_CURRENT_SOURCE_DIR}/${source_file}>\n")
  endforeach(source_file)
  # Complement list of translation units with the name of ub
  set(${SOURCE_VARIABLE_NAME} ${${SOURCE_VARIABLE_NAME}} ${unit_build_file} PARENT_SCOPE)
endfunction(enable_unity_build)

set(SOURCES
  src/TGA_Lib.cc )


add_library(TGA_Lib ${SOURCES})

if(TGA_TEST)
  add_executable(TGAtest src/test.cc)
  target_link_libraries(TGAtest LINK_PUBLIC TGA_Lib)
endif()
